[{"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\index.js":"1","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\App.js":"2","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\styles\\global.js":"3","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\styles\\styles.js":"4","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Input\\style.js":"5","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\itemRepo\\index.js":"6","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\itemRepo\\styles.js":"7","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\services\\api.js":"8","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Input\\index.jsx":"9","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Button\\index.jsx":"10","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Button\\style.js":"11"},{"size":316,"mtime":1668787100753,"results":"12","hashOfConfig":"13"},{"size":1897,"mtime":1668811459835,"results":"14","hashOfConfig":"13"},{"size":229,"mtime":1668785814376,"results":"15","hashOfConfig":"13"},{"size":296,"mtime":1668788435174,"results":"16","hashOfConfig":"13"},{"size":322,"mtime":1668795316471,"results":"17","hashOfConfig":"13"},{"size":820,"mtime":1668811457950,"results":"18","hashOfConfig":"13"},{"size":1030,"mtime":1668796230405,"results":"19","hashOfConfig":"13"},{"size":172,"mtime":1668790740696,"results":"20","hashOfConfig":"13"},{"size":283,"mtime":1668794042137,"results":"21","hashOfConfig":"13"},{"size":336,"mtime":1668793882787,"results":"22","hashOfConfig":"13"},{"size":293,"mtime":1668795384100,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c3fx61",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\index.js",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\App.js",["58"],[],"import { Container } from \"./styles/styles.js\";\r\nimport { useState } from \"react\";\r\nimport gitLogo from \"./img/github.svg\";\r\nimport Input from \"./components/Input/index.jsx\";\r\nimport ItemRepo from \"./components/itemRepo/index.js\";\r\nimport Button from \"./components/Button/index.jsx\";\r\nimport { api } from \"./services/api\";\r\n\r\nconst App = () => {\r\n  const [currentRepo, setCurrentRepo] = useState(\"\");\r\n  const [respos, setRespos] = useState([]);\r\n\r\n  \r\n  //Função que vai buscar o repositório e colocar na tela\r\n\r\n  const handleSearchRepo = async () => {\r\n    // requerimento get e utilizamos o repos que utilizamos no endereço http para direcionar\r\n    const { data } = await api.get(`repos/${currentRepo}`);\r\n\r\n    // se a informação for igual ao id\r\n    if (data.id) {\r\n      // Validação para não repetir repositorios\r\n      const isExist = respos.find((repo) => repo.id === data.id);\r\n\r\n      if (!isExist) {\r\n        // Concatena com o setRespo com as informações que já temos\r\n        setRespos((prev) => [...prev, data]);\r\n        //Depois de encontrado, ao procurar de novo ele irá limpar\r\n        setCurrentRepo(\"\");\r\n        return;\r\n      }\r\n    }\r\n    alert(\"Repositório não encontrado ou já existente!\");\r\n  };\r\n\r\n  const handleRemoveRepo = (id) => {\r\n    const remover = respos.filter((repo) => repo.id !== );\r\n    console.log(remover);\r\n\r\n    setCurrentRepo(remover);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"App\">\r\n          <img src={gitLogo} width={72} height={72} />\r\n        </div>\r\n        <Input\r\n          value={currentRepo}\r\n          onChange={(e) => setCurrentRepo(e.target.value)}\r\n        />\r\n        <Button onClick={handleSearchRepo} />\r\n        {respos.map((repo) => (\r\n          <ItemRepo handleRemoveRepo={handleRemoveRepo} repo={repo} />\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\styles\\global.js",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\styles\\styles.js",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Input\\style.js",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\itemRepo\\index.js",["59","60"],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\itemRepo\\styles.js",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\services\\api.js",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Input\\index.jsx",[],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Button\\index.jsx",["61"],[],"C:\\Users\\joice\\ReactJS_Projetos\\repositorios\\src\\components\\Button\\style.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":46,"column":11,"nodeType":"64","endLine":46,"endColumn":55},{"ruleId":"65","severity":1,"message":"66","line":21,"column":13,"nodeType":"64","endLine":21,"endColumn":62},{"ruleId":"62","severity":1,"message":"63","line":22,"column":15,"nodeType":"64","endLine":22,"endColumn":57},{"ruleId":"62","severity":1,"message":"63","line":9,"column":9,"nodeType":"64","endLine":9,"endColumn":52},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]